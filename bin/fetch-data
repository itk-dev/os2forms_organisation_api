#!/usr/bin/env bash
set -o errexit -o errtrace -o noclobber -o nounset -o pipefail
IFS=$'\n\t'

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
project_dir=$(cd "$(dirname "$script_dir")" && pwd)

cd "$project_dir"

database_urls=(
    # Cf. ../docker-compose.override.yml
    'mysql://db:db@database-0:3306/db?serverVersion=10.11.2-MariaDB&charset=utf8mb4'
    'mysql://db:db@database-1:3306/db?serverVersion=10.11.2-MariaDB&charset=utf8mb4'
)

current_database_url=$(docker compose exec phpfpm bin/console debug:config DoctrineBundle --resolve-env --format=json | docker compose run --rm jq '.doctrine.dbal.connections.default.url' --raw-output)

current_index=-1
for i in "${!database_urls[@]}"; do
    if [ "${database_urls[$i]}" = "$current_database_url" ]; then
       current_index=$i
    fi
done

next_index=$(( (current_index + 1) % "${#database_urls[@]}" ))

next_database_url="${database_urls[$next_index]}"

echo current_database_url: "$current_database_url"
echo current_index: "$current_index"
echo next_database_url: "$next_database_url"
echo next_index: "$next_index"

docker compose exec --env DATABASE_URL="$next_database_url" phpfpm bin/console doctrine:migrations:migrate --no-interaction
# @todo Fetch data
# docker compose exec --env DATABASE_URL="$next_database_url" phpfpm bin/console organisation:fetch:data

echo "DATABASE_URL='$next_database_url'" | tee >| .env.local.database

# Re-up to read in new database URL.
docker compose up --detach

echo 'SUCCESS!'
